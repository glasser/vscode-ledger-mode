<!DOCTYPE html>
<html>
<head>
    <title>Tokenization Test Cases</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            margin: 20px; 
            line-height: 1.4;
            background-color: #ffffff;
            color: #333333;
        }
        
        h1 {
            color: #333;
            border-bottom: 2px solid #0066cc;
            padding-bottom: 10px;
            margin-bottom: 30px;
        }
        
        .summary {
            background-color: #e8f4f8;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 30px;
            border-left: 4px solid #0066cc;
        }
        
        .summary h2 {
            margin-top: 0;
            color: #0066cc;
        }
        
        .file-section {
            margin-bottom: 40px;
        }
        
        .file-section h2 {
            color: #333;
            border-bottom: 1px solid #ddd;
            padding-bottom: 8px;
            text-transform: capitalize;
        }
        
        .test-cases-grid {
            display: grid;
            gap: 20px;
        }
        
        .test-case {
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            background-color: #fafafa;
        }
        
        .test-case.invalid-test {
            border-color: #f39c12;
            background-color: #fef9e7;
        }
        
        .test-header {
            background-color: #f5f5f5;
            padding: 15px;
            border-bottom: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .invalid-test .test-header {
            background-color: #f8d7da;
        }
        
        .test-header h3 {
            margin: 0;
            font-size: 16px;
            color: #333;
        }
        
        .test-type {
            background-color: #007bff;
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            text-transform: uppercase;
        }
        
        .test-content {
            display: grid;
            grid-template-columns: 1fr;
            gap: 0;
        }
        
        .input-section.full-width {
            grid-column: 1 / -1;
        }
        
        .input-section, .expected-section {
            padding: 15px;
        }
        
        .input-section {
            background-color: #f8f9fa;
            border-bottom: 1px solid #ddd;
        }
        
        .expected-section {
            background-color: #f0f8f0;
        }
        
        .section-header {
            font-weight: bold;
            margin-bottom: 10px;
            color: #666;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .ledger-line {
            background-color: #ffffff;
            padding: 8px 12px;
            border-radius: 4px;
            border: 1px solid #e0e0e0;
            font-family: 'Courier New', monospace;
            font-size: 13px;
            margin-bottom: 8px;
            white-space: pre;
        }
        
        .inputs-list .ledger-line:last-child {
            margin-bottom: 0;
        }
        
        .json-output, .json-content {
            background-color: #ffffff;
            padding: 12px;
            border-radius: 4px;
            border: 1px solid #e0e0e0;
            font-family: 'Courier New', monospace;
            font-size: 12px;
            margin: 0;
            overflow-x: auto;
        }
        
        .reason {
            margin-top: 10px;
            padding: 8px;
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 4px;
            font-style: italic;
            color: #856404;
        }
        
        .error {
            color: #d73027;
            padding: 10px;
            background-color: #f8d7da;
            border-radius: 4px;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>
<body>
    <h1>Tokenization Test Cases</h1>
    
    <div class="summary">
        <h2>What This Shows</h2>
        <p>Test cases for transaction and posting parsing functionality. These tests verify that the tokenization logic correctly parses ledger syntax into structured data.</p>
        <p><strong>Features being tested:</strong></p>
        <ul>
            <li><strong>Transaction parsing</strong>: Date, state markers, payee names, codes, effective dates</li>
            <li><strong>Posting parsing</strong>: Account names, amounts, state markers, comments</li>
            <li><strong>Invalid input handling</strong>: Ensuring malformed lines are properly rejected</li>
            <li><strong>Edge cases</strong>: Special characters, various date formats, complex amounts</li>
        </ul>
        <p><strong>Total test cases:</strong> {{getTotalTestCases testCases}}</p>
    </div>

    {{#each testCases}}
    {{#if (isJsonFile name)}}
        <div class="file-section">
            <h2>{{getSectionTitle name}}</h2>
            {{#if (isParsingTest name)}}
                <div class="test-cases-grid">
                    {{#each (getJsonContent this)}}
                        <div class="test-case {{#if (isInvalidTest ../name)}}invalid-test{{/if}}">
                            <div class="test-header">
                                <h3>{{description}}</h3>
                                {{#if type}}<span class="test-type">{{type}}</span>{{/if}}
                            </div>
                            <div class="test-content">
                                {{#if input}}
                                    <div class="input-section">
                                        <div class="section-header">Input</div>
                                        <div class="ledger-line">{{{escapeHtml input}}}</div>
                                    </div>
                                    <div class="expected-section">
                                        <div class="section-header">Expected</div>
                                        <pre class="json-output">{{{escapeHtml (formatJson expected)}}}</pre>
                                    </div>
                                {{else if inputs}}
                                    <div class="input-section full-width">
                                        <div class="section-header">Test Inputs {{#if shouldParse}}(Should Parse){{else}}(Should Not Parse){{/if}}</div>
                                        <div class="inputs-list">
                                            {{#each inputs}}
                                                <div class="ledger-line">{{{escapeHtml this}}}</div>
                                            {{/each}}
                                        </div>
                                        {{#if reason}}<div class="reason">{{{escapeHtml reason}}}</div>{{/if}}
                                    </div>
                                {{/if}}
                            </div>
                        </div>
                    {{/each}}
                </div>
            {{else}}
                <pre class="json-content">{{{escapeHtml (formatJson (getJsonContent this))}}}</pre>
            {{/if}}
        </div>
    {{/if}}
    {{/each}}

</body>
</html>